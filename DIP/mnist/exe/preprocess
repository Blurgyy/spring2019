#!/usr/bin/python3
# -*- coding: utf-8 -*-
__author__ = "zgy";

"""
Python script that reads all training and testing images 
and dump the data into a .pickle file, so as to simplify
the actual training process afterwards. 
"""

import os
import sys
import pickle
import numpy as np 
from PIL import Image

training_img_path = "../dat/training";
training_set_dmp_fname = "../dmp/training_set.pickle";
testing_img_path = "../dat/testing";
testing_set_dmp_fname = "../dmp/testing_set.pickle";
training_img = [];
testing_img = [];

if(not os.path.exists("../dmp")):
	os.makedirs("../dmp");

force_update = False;
if(sys.argv[1] == "-f"):
	force_update = True;

if(force_update == True or not os.path.exists(training_set_dmp_fname)):
	cnt = 0;
	for root, dirs, files in os.walk(training_img_path):
	    for file in files:
	        if(file.split('.')[-1] == "png"):
	            img = Image.open(root + '/' + file);
	            arr = np.array(img);
	            training_img.append([arr.reshape(-1, 1), int(root.split('/')[-1])]);
	            cnt += 1;
	            if(cnt % 1000 == 0):
	            	print(cnt);

	print("dumping training set..");
	with open(training_set_dmp_fname, 'wb') as f:
	    pickle.dump(training_img, f);
	print("training set dumped at %s" % training_set_dmp_fname);

if(force_update == True or not os.path.exists(testing_set_dmp_fname)):
	cnt = 0;
	for root, dirs, files in os.walk(testing_img_path):
		for file in files:
			img = Image.open(root + '/' + file);
			arr = np.array(img);
			testing_img.append(arr.reshape(-1, 1));
			cnt += 1;
			if(cnt % 100 == 0):
				print(cnt);

	print("dumping testing set..");
	with open(testing_set_dmp_fname, 'wb') as f:
		pickle.dump(testing_img, f);
	print("testing set dumped ad %s" % testing_set_dmp_fname);

